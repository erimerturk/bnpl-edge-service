server.port=9000
server.netty.connection-timeout=2s
server.netty.idle-timeout=15s
server.shutdown=graceful
spring.application.name=bnpl-edge-service
spring.lifecycle.timeout-per-shutdown-phase=15s
spring.config.import=optional:configserver:
spring.cloud.config.uri=http://localhost:8888
spring.cloud.config.request-connect-timeout=5000
spring.cloud.config.request-read-timeout=5000
spring.cloud.config.fail-fast=false
spring.cloud.config.retry.max-attempts=6
spring.cloud.config.retry.initial-interval=1000
spring.cloud.config.retry.max-interval=2000
spring.cloud.config.retry.multiplier=1.1
spring.cloud.gateway.httpclient.connect-timeout=2000
spring.cloud.gateway.httpclient.response-timeout=5s
spring.cloud.gateway.httpclient.pool.type=elastic
spring.cloud.gateway.httpclient.pool.max-idle-time=15s
spring.cloud.gateway.httpclient.pool.max-life-time=60s
spring.cloud.gateway.default-filters[0]=SaveSession
spring.cloud.gateway.default-filters[1].name=RequestRateLimiter
spring.cloud.gateway.default-filters[1].args.redis-rate-limiter.replenishRate=10
spring.cloud.gateway.default-filters[1].args.redis-rate-limiter.burstCapacity=20
spring.cloud.gateway.default-filters[1].args.redis-rate-limiter.requestedTokens=1
spring.cloud.gateway.default-filters[2].name=Retry
spring.cloud.gateway.default-filters[2].args.retries=3
spring.cloud.gateway.default-filters[2].args.methods=GET
spring.cloud.gateway.default-filters[2].args.series=SERVER_ERROR
spring.cloud.gateway.default-filters[2].args.exceptions=java.io.IOException, java.util.concurrent.TimeoutException
spring.cloud.gateway.default-filters[2].args.backoff.firstBackoff=50ms
spring.cloud.gateway.default-filters[2].args.backoff.maxBackOff=500ms
spring.cloud.gateway.default-filters[2].args.backoff.factor=2
spring.cloud.gateway.default-filters[2].args.backoff.basedOnPreviousValue=false
spring.cloud.gateway.routes[0].id=catalog-route
spring.cloud.gateway.routes[0].uri=${CATALOG_SERVICE_URL:http://localhost:9001}/properties
spring.cloud.gateway.routes[0].predicates[0]=Path=/properties/**
spring.cloud.gateway.routes[0].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args.name=catalogCircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args.fallbackUri=forward:/catalog-fallback
spring.cloud.gateway.routes[1].id=order-route
spring.cloud.gateway.routes[1].uri=${ORDER_SERVICE_URL:http://localhost:9002}/orders
spring.cloud.gateway.routes[1].predicates[0]=Path=/orders/**
spring.cloud.gateway.routes[1].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[1].filters[0].args.name=orderCircuitBreaker
spring.data.redis.connect-timeout=2s
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.timeout=1s
spring.session.store-type=redis
spring.session.timeout=10m
spring.session.redis.namespace=bnpl:edge
resilience4j.circuitbreaker.configs.default.slidingWindowSize=20
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=5
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=15000
resilience4j.timelimiter.configs.default.timeoutDuration=5s

#logging.level.io.github.resilience4j=DEBUG


spring.security.oauth2.client.registration.keycloak.client-id=bnpl-edge-service
spring.security.oauth2.client.registration.keycloak.client-secret=bnpl-keycloak-secret
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/BNPLRealEstate